import sys
import os
import sqlite3
from datetime import datetime

def view_stats(db_file="meeting_room.db"):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    
    print(f"=== –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –±–∞–∑—ã: {db_file} ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(db_file):
        print(f"‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö {db_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    try:
        conn = sqlite3.connect(db_file)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ stats
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='stats';")
        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ stats –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
            conn.close()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã stats
        cursor.execute("""
            SELECT s.id, s.user_id, u.username, s.year, s.month, s.total_bookings, s.total_duration_minutes, s.created_at, s.updated_at
            FROM stats s
            LEFT JOIN users u ON s.user_id = u.user_id
            ORDER BY s.year DESC, s.month DESC, s.total_bookings DESC
        """)
        
        all_stats = cursor.fetchall()
        
        if not all_stats:
            print("üìä –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—Å—Ç–∞")
            conn.close()
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(all_stats)} –∑–∞–ø–∏—Å–µ–π –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ")
        print()
        
        # –í—ã–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        print(f"{'ID':<4} {'User ID':<8} {'Username':<15} {'Year':<6} {'Month':<6} {'Bookings':<8} {'Duration (min)':<13} {'Created':<20}")
        print("-" * 100)
        
        # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
        for record in all_stats:
            record_id, user_id, username, year, month, total_bookings, duration_minutes, created_at, updated_at = record
            username = username or f"user_{user_id}"  # –ï—Å–ª–∏ username None, –∏—Å–ø–æ–ª—å–∑—É–µ–º user_id
            duration_hours = duration_minutes // 60
            duration_mins = duration_minutes % 60
            duration_text = f"{duration_hours}—á {duration_mins}–º–∏–Ω" if duration_hours > 0 else f"{duration_mins}–º–∏–Ω"
            
            print(f"{record_id:<4} {user_id:<8} {username:<15} {year:<6} {month:<6} {total_bookings:<8} {duration_text:<13} {created_at[:19] if created_at else '':<20}")
        
        print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("=== –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===")
        
        # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
        cursor.execute("""
            SELECT s.user_id, u.username, SUM(s.total_bookings) as total_bookings
            FROM stats s
            LEFT JOIN users u ON s.user_id = u.user_id
            GROUP BY s.user_id
            ORDER BY total_bookings DESC
            LIMIT 10
        """)
        
        top_bookings = cursor.fetchall()
        print("\nüìà –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è:")
        for i, (user_id, username, total) in enumerate(top_bookings, 1):
            username = username or f"user_{user_id}"
            print(f"  {i:2d}. {username:<15} - {total} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
        
        # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
        cursor.execute("""
            SELECT s.user_id, u.username, SUM(s.total_duration_minutes) as total_duration
            FROM stats s
            LEFT JOIN users u ON s.user_id = u.user_id
            GROUP BY s.user_id
            ORDER BY total_duration DESC
            LIMIT 10
        """)
        
        top_duration = cursor.fetchall()
        print("\n‚è±Ô∏è  –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è:")
        for i, (user_id, username, total_minutes) in enumerate(top_duration, 1):
            username = username or f"user_{user_id}"
            total_hours = total_minutes // 60
            total_mins = total_minutes % 60
            duration_text = f"{total_hours}—á {total_mins}–º–∏–Ω" if total_hours > 0 else f"{total_mins}–º–∏–Ω"
            print(f"  {i:2d}. {username:<15} - {duration_text} ({total_minutes} –º–∏–Ω)")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º
        cursor.execute("""
            SELECT year, month, SUM(total_bookings) as monthly_bookings, SUM(total_duration_minutes) as monthly_duration
            FROM stats
            GROUP BY year, month
            ORDER BY year DESC, month DESC
            LIMIT 10
        """)
        
        monthly_stats = cursor.fetchall()
        print("\nüìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º:")
        for year, month, bookings, duration in monthly_stats:
            duration_hours = duration // 60
            duration_mins = duration % 60
            duration_text = f"{duration_hours}—á {duration_mins}–º–∏–Ω" if duration_hours > 0 else f"{duration_mins}–º–∏–Ω"
            print(f"  {year}-{month:02d}: {bookings} –±—Ä–æ–Ω., {duration_text}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

def main():
    if len(sys.argv) > 1:
        db_file = sys.argv[1]
    else:
        db_file = "meeting_room.db"
    
    view_stats(db_file)

if __name__ == "__main__":
    main()